---
- name: "Create Mysql Folder"
  file:
    path: "{{ item }}"
    state: directory
    mode: 0750
  with_items:
    - "{{ mysql_datadir }}"
    - "{{ mysql_configdir }}"
    - "{{ install_tmp }}"

  
- name: "Copy Mysql Config File"
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: 999
    group: 999 
    mode: 0640
  with_items:
    - { src: 'mysqld.cnf', dest: '{{ mysql_configdir }}/mysqld.cnf' }


- name: "Copy Mysql Service File"
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: root
    group: root
    mode: 0640
  with_items:
    - { src: 'mysqld.service', dest: '/etc/systemd/system' }


- name: "Copy Mysql Docker Image and Sql"
  unarchive:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: root
    group: root
    mode: 0640
  with_items:
    - { src: 'mysql_{{ mysql_ver }}.tar.gz', dest: '{{ install_tmp }}' }
    - { src: 'sql.tar.gz', dest: '{{ install_tmp }}' }


- name: "Load Mysql Docker Image"
  shell: "docker load -i {{ install_tmp }}/mysql_{{ mysql_ver }}.tar"


- name: "Init Mysql Server"
  shell: >
    docker run -d \
      --name mysql \
      -p 3306:3306 \
      -e UMASK=0600 \
      -e UMASK_DIR=0700 \
      -e MYSQL_HISTFILE=/dev/null \
      -e MYSQL_ROOT_PASSWORD={{ mysql_root_pwd }} \
      -v {{ mysql_datadir }}:/var/lib/mysql \
      -v {{ mysql_configdir }}/mysqld.cnf:/etc/mysql/mysql.conf.d/mysqld.cnf \
      -v {{ install_tmp }}:/tmp/install \
      mysql:{{ mysql_ver }}


- name: "Wait for Mysql Server"
  wait_for:
    host: 127.0.0.1
    port: 3306
    state: started
    delay: 30


- name: "Create Zabbix User and Database"
  shell: >
    docker exec mysql mysql -u root -p{{ mysql_root_pwd }} -e "CREATE DATABASE IF NOT EXISTS {{ zabbix_database }} DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci;" && \
    docker exec mysql mysql -u root -p{{ mysql_root_pwd }} -e "GRANT ALL PRIVILEGES ON {{ zabbix_database }}.* TO {{ zabbix_user }}@'localhost' IDENTIFIED BY '{{ zabbix_user_pwd }}';" && \
    docker exec mysql mysql -u root -p{{ mysql_root_pwd }} -e "GRANT ALL PRIVILEGES ON {{ zabbix_database }}.* TO {{ zabbix_user }}@'{{ ansible_ssh_host }}' IDENTIFIED BY '{{ zabbix_user_pwd }}';" && \
    docker exec mysql mysql -u root -p{{ mysql_root_pwd }} -e "GRANT ALL PRIVILEGES ON *.* TO root@'%' IDENTIFIED BY '{{ mysql_root_pwd }}';" && \
    docker exec mysql mysql -u root -p{{ mysql_root_pwd }} -e "FLUSH PRIVILEGES;"


- name: "Exexute Zabbix SQL"
  shell: >
    docker exec mysql bash -c "mysql -u root -p{{ mysql_root_pwd }} -D {{ zabbix_database }} < /tmp/install/schema.sql"  && \
    docker exec mysql bash -c "mysql -u root -p{{ mysql_root_pwd }} -D {{ zabbix_database }} < /tmp/install/images.sql"  && \
    docker exec mysql bash -c "mysql -u root -p{{ mysql_root_pwd }} -D {{ zabbix_database }} < /tmp/install/data.sql"    


- name: "Stop Mysql Server Container"
  shell: "docker stop mysql && docker rm mysql"


- name: "Restart Mysql Server"
  systemd:
    name: "mysqld"
    state: restarted
    daemon_reload: yes
    enabled: yes


- name: "Wait for Mysql Server"
  wait_for:
    host: "{{ ansible_ssh_host }}"
    port: 3306
    state: started
    delay: 30


- name: "Start Firewalld"
  systemd:
    name: "firewalld"
    state: started
    daemon_reload: yes
    enabled: yes


- name: "Set Firewalld"
  firewalld:
    zone: public
    port: "{{ item }}"
    permanent: yes
    immediate: yes
    state: enabled
  with_items:
    - "3306/tcp"


- name: "Remove Install Tmp Folder"
  file:
    path: "{{ install_tmp }}"
    state: absent
